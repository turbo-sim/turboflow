
name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  test_ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'  

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.11'  

    - name: Create conda environment
      run: |
        conda env create -f environment.yaml

    - name: Install dependencies
      run: |
        source "$(conda info --base)/etc/profile.d/conda.sh"
        conda activate turboflow_env
        pip install poetry
        poetry install

    - name: Run tests
      run: |
        source "$(conda info --base)/etc/profile.d/conda.sh"
        conda activate turboflow_env
        pytest


  test_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11' 

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.11'  

    - name: Create conda environment
      run: conda env create -f environment.yaml

    - name: Install dependencies
      run: |
        conda activate turboflow_env
        pip install poetry
        poetry install
      shell: bash -l {0}
      
    - name: Run tests
      run: |
        conda activate turboflow_env
        pytest
      shell: bash -l {0}




  publish_to_pypi:
    runs-on: ubuntu-latest
    
    if: startsWith(github.ref, 'refs/tags/v')

    needs: [test_windows]  # Ensure tests pass before deploying

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install --only=main

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        poetry build
        poetry publish --username $TWINE_USERNAME --password $TWINE_PASSWORD